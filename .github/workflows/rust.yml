name: Rust CI

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  release-build:
    if: github.event_name == 'release'
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
    
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust target
        run: rustup target add ${{ matrix.platform.target }}
      
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.platform.target }}
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform.target }}
      
      - name: Rename binary
        run: |
          mkdir release
          BIN_NAME=$(basename $(pwd))
          cp target/${{ matrix.platform.target }}/release/$BIN_NAME${{ matrix.platform.ext }} release/$BIN_NAME-${{ matrix.platform.target }}${{ matrix.platform.ext }}
      
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release/$BIN_NAME-${{ matrix.platform.target }}${{ matrix.platform.ext }}
          asset_name: $BIN_NAME-${{ matrix.platform.target }}${{ matrix.platform.ext }}
          asset_content_type: application/octet-stream
